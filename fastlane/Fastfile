# fastlane.tools configuration

opt_out_usage
update_fastlane

default_platform(:ios)

DEVELOPER_APPLE_ID = ENV.fetch('DEVELOPER_APPLE_ID')
DEVELOPER_APP_IDENTIFIER = ENV.fetch('DEVELOPER_APP_IDENTIFIER')
PROVISIONING_PROFILE_SPECIFIER = ENV.fetch('PROVISIONING_PROFILE_SPECIFIER')
TEMP_KEYCHAIN_USER = ENV.fetch('TEMP_KEYCHAIN_USER')
TEMP_KEYCHAIN_PASSWORD = ENV.fetch('TEMP_KEYCHAIN_PASSWORD')
APPLE_ISSUER_ID = ENV.fetch('APPLE_ISSUER_ID')
APPLE_KEY_ID = ENV.fetch('APPLE_KEY_ID')
APPLE_KEY_CONTENT = ENV.fetch('APPLE_KEY_CONTENT')
GIT_AUTHORIZATION = ENV.fetch('GIT_AUTHORIZATION')
REPO_GITHUB_TOKEN = ENV.fetch('REPO_GITHUB_TOKEN')

LATEST_GIT_TAG = sh("git describe --abbrev=0 --tags | tr -d '\n'")
CHANGELOG_LATEST_SECTION = read_changelog(
  section_identifier: '[Unreleased]',
  excluded_markdown_elements: []
)

lane :verify_changelog do
  puts CHANGELOG_LATEST_SECTION.to_s
end

lane :increment_versions do
  current_testflight_build_number = latest_testflight_build_number(
    app_identifier: DEVELOPER_APP_IDENTIFIER.to_s
  )
  increment_build_number(
    build_number: number_of_commits
  )
  increment_version_number_in_xcodeproj(
    scheme: 'Lunar',
    version_number: LATEST_GIT_TAG.to_s
  )
  puts "Build Number: #{current_testflight_build_number} --> #{number_of_commits}"
end

lane :lunar_sign do
  match(
    type: 'appstore',
    app_identifier: [
      'io.github.mani-sh-reddy.Lunar',
      'io.github.mani-sh-reddy.Lunar.Widgets'
    ]
  )
end

lane :lunar_build do
  gym(
    scheme: 'Lunar',
    xcodebuild_formatter: 'xcbeautify',
    suppress_xcode_output: false,
    silent: false,
    clean: true,
    build_timing_summary: true,
    analyze_build_time: true
  )
end

lane :lunar_deploy do
  api_key = app_store_connect_api_key(
    key_id: APPLE_KEY_ID.to_s,
    issuer_id: APPLE_ISSUER_ID.to_s,
    key_filepath: '../AuthKey_2VL63G4UUJ.p8',
    duration: 1200,
    in_house: false
  )
  pilot(
    changelog: CHANGELOG_LATEST_SECTION.to_s,
    skip_submission: true,
    api_key: api_key,
    skip_waiting_for_build_processing: true
  )
end

lane :CI do
  increment_versions
end

lane :DEPLOY_TESTFLIGHT do
  increment_versions
  lunar_sign
  lunar_build
  lunar_deploy
  # Generate github release here

  generate_github_release

  stamp_changelog(
    section_identifier: LATEST_GIT_TAG.to_s,
    should_stamp_date: false
  )

  # reset_git_repo(
  #   force: true,
  #   files: ['./Lunar.xcodeproj/project.pbxproj']
  # )
end

lane :generate_github_release do
  create_pull_request(
    repo: 'mani-sh-reddy/Lunar',
    api_token: REPO_GITHUB_TOKEN.to_s,
    title: LATEST_GIT_TAG.to_s,
    head: 'dev',
    base: 'testflight',
    body: CHANGELOG_LATEST_SECTION.to_s
  )

  set_github_release(
    repository_name: 'mani-sh-reddy/Lunar',
    api_token: REPO_GITHUB_TOKEN.to_s,
    name: LATEST_GIT_TAG.to_s,
    tag_name: LATEST_GIT_TAG.to_s,
    description: CHANGELOG_LATEST_SECTION.to_s,
    commitish: 'dev',
    upload_assets: ['Lunar.ipa']
  )
end
