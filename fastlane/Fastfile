# This file contains the fastlane.tools configuration

# sem_ver_tag = UI.select("Select Semantic Versioning Tag: ", ["major", "minor", "patch"])

line_separator = "========================================================================="

latest_git_tag = sh("git describe --abbrev=0 --tags | tr -d '\n'")

opt_out_usage
update_fastlane

default_platform(:ios)
# xcode_select("/Applications/Xcode-beta.app")

DEVELOPER_APPLE_ID = ENV["DEVELOPER_APPLE_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
REPO_GITHUB_TOKEN = ENV["REPO_GITHUB_TOKEN"]
LATEST_TAG = ENV["LATEST_TAG"]
API_KEY_FILEPATH = ENV["API_KEY_FILEPATH"]

default_platform(:ios)
platform :ios do
  desc "Only Increment Xcode Build/version numbers"
  lane :INCREMENT_ONLY do
    increment_build_number({
      build_number: number_of_commits
  })

  increment_version_number_in_xcodeproj(
    scheme: "Lunar",
    version_number: latest_git_tag, 
  )
  end

  desc "Package and deploy to testflight"
  lane :INCREMENT_AND_TESTFLIGHT_UPLOAD do
    changelog = prompt(
      text: "Changelog: ",
      multi_line_end_keyword: "END"
    )
    match(type: "appstore")

    latest_build_number = latest_testflight_build_number(
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}"
    )
    
    increment_build_number({
        build_number: number_of_commits
    })

    increment_version_number_in_xcodeproj(
      scheme: "Lunar",
      version_number: latest_git_tag, 
    )

    build_app(
      scheme: "Lunar",
      silent: true,
      suppress_xcode_output: true
    )

    api_key = app_store_connect_api_key(
      key_id: "#{APPLE_KEY_ID}",
      issuer_id: "#{APPLE_ISSUER_ID}",
      key_filepath: "../AuthKey_2VL63G4UUJ.p8",
      duration: 1200, # optional (maximum 1200)
      in_house: false # optional but may be required if using match/sigh
    )

      UI.message "\n #{line_separator}#{line_separator} \n"
      UI.message "Release Notes: \n #{latest_git_tag} \n \n #{changelog} \n"
      UI.message "\n #{line_separator}#{line_separator} \n"

    upload_to_testflight(
      changelog: changelog,
      skip_submission: true, # skip submission, only upload build
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )

    reset_git_repo(
      force: true,
      files: ["./Lunar.xcodeproj/project.pbxproj"]
    )

    # Next Steps
    #   Create/merge PR to main
    #   Create release
    #   Add release notes
    #   Upload IPA file

  end
end
